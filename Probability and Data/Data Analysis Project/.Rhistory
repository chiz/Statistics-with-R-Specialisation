setwd("~/Documents/Data Science References/Statistics with R Specialization/Probability and Data/Data Analysis Project")
load("brfss2013.RData")
View(brfss2013)
brfssrdata<-load("brfss2013.RData")
?grep
library(ggplot2)
library(dplyr)
load("brfss2013.RData")
grep("hlth", brfss2013)
Titanic
ftable(Titanic)
ftable(Titanic,rows.var=Age, col.vars = Sex)
ftable(Titanic,rows.var="Age", col.vars = "Sex")
table(brfss_cleaned_q3$sex, brfss_cleaned_q3$race, brfss_cleaned_q3$X_rfhlth)
library(ggplot2)
library(dplyr)
library(reshape)
library(knitr)
load("brfss2013.RData")
brfss2013%>% group_by(mscode) %>%
summarise(total=n())
mscode_levels<-levels(brfss2013$mscode)
city1<-mscode_levels[1]
city2<-mscode_levels[2]
brfss2013<-brfss2013%>%
mutate(citydweller = ifelse(mscode==city1|mscode==city2,"City dweller","Not a city dweller") )
#Verification
brfss2013%>% filter(mscode==city1|mscode==city2)%>%
group_by(citydweller)%>%
summarise(total=n())
ggplot(data=brfss2013,aes(x=citydweller))+geom_bar()+ ggtitle("Bar diagram showing whether a person lives in the city")
brfss2013[!is.na(brfss2013$citydweller),]%>%group_by(citydweller)%>%
summarise(total=n())
city_dweller_data<- brfss2013%>%
filter(citydweller=="City dweller")
ggplot(city_dweller_data,aes(x=X_rfhlth)) + geom_bar()
city_dweller_summary_total<-city_dweller_data[!is.na(city_dweller_data$X_rfhlth),] %>% group_by(X_rfhlth) %>%
summarise(total= n())
city_dweller_summary_total
total_city_dweller= sum(!is.na(city_dweller_data$X_rfhlth))
city_dweller_data[!is.na(city_dweller_data$X_rfhlth),] %>% group_by(X_rfhlth) %>%
summarise(proportion= n()/total_city_dweller)
#Storing number of healthy people for city dwellers
city_success<- as.numeric(city_dweller_summary_total[1,2])
non_city_dweller_data<-brfss2013%>%
filter(citydweller=="Not a city dweller")
ggplot(non_city_dweller_data, aes(x=X_rfhlth)) +geom_bar() + ggtitle("Bar plot concerning health of non-city dwellers")
non_city_total_summary<-non_city_dweller_data[!is.na(non_city_dweller_data$X_rfhlth),]%>% group_by(X_rfhlth) %>%
summarise(total=n())
non_city_total_summary
total_non_city_dweller= sum(!is.na(non_city_dweller_data$X_rfhlth))
non_city_dweller_data[!is.na(non_city_dweller_data$X_rfhlth),]%>% group_by(X_rfhlth) %>%
summarise(proportion=n()/total_non_city_dweller)
#Storing number of healthy people for non-city dwellers
non_city_success<- as.numeric(non_city_total_summary[1,2])
prop.test(x=c(city_success,non_city_success), n=c(total_city_dweller,total_non_city_dweller), alternative="greater")
remove_na<-(!is.na(brfss2013$X_educag)&!is.na(brfss2013$X_rfsmok3)&!is.na(brfss2013$sex))
nrow(brfss2013)
length(remove_na)
brfss_cleaned <- brfss2013[remove_na,]
brfss_cleaned%>% group_by(X_educag)%>%
summarise(total=n())
brfss_cleaned<- brfss_cleaned%>%
mutate(collegegrad=ifelse(X_educag=="Graduated from college or technical school","Graduate","Non-graduate"))
brfss_cleaned%>% group_by(collegegrad) %>%
summarise(total=n())
#Creating a proportion table
table1<-table(brfss_cleaned$sex, brfss_cleaned$collegegrad)
prop.table(table1)
brfss_cleaned<- brfss_cleaned %>%
mutate(sex_collegegrad=paste(sex,collegegrad))
summary_sex_collegegrad<-brfss_cleaned %>% group_by(sex_collegegrad) %>%
summarise(total=n())%>%
mutate(proportion = total/sum(total))
summary_sex_collegegrad[order(summary_sex_collegegrad$proportion),]
table1<-table(brfss_cleaned$sex_collegegrad,brfss_cleaned$X_rfsmok3)
mosaicplot(table1, main="Smokers vs Non Smokers for sex_collegegrad" ,color=TRUE)
table2<-table(brfss_cleaned$sex, brfss_cleaned$collegegrad, brfss_cleaned$X_rfsmok3)
mosaicplot(table2,main="Smokers vs Non Smokers categorised by sex and collegegrad", color=TRUE)
brfss_cleaned_q3 <- brfss2013[!is.na(brfss2013$sex)&!is.na(brfss2013$X_imprace)&!is.na(brfss2013$genhlth),]
table_q3<- table(brfss_cleaned_q3$X_imprace,brfss_cleaned_q3$sex,  brfss_cleaned_q3$genhlth)
mosaicplot(table_q3, main="TEST plot", color = TRUE)
brfss_white<-brfss_cleaned_q3 %>% filter(X_imprace=="White, Non-Hispanic")
table_white<- table(brfss_white$sex,  brfss_white$genhlth)
mosaicplot(table_white, main="General Health for Male and Female Whites", color = TRUE, margin=TRUE)
male_white_summary<-brfss_white %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_white_summary, caption = "Male White Health")
female_white_summary<-brfss_white %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_white_summary, caption = "Female White Health")
brfss_black<-brfss_cleaned_q3 %>% filter(X_imprace=="Black, Non-Hispanic")
table_black<- table(brfss_black$sex,  brfss_black$genhlth)
mosaicplot(table_black, main="General Health for Male and Female Blacks", color = TRUE, margin=TRUE)
male_black_summary<-brfss_black %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_black_summary, caption = "Male Black Health")
female_black_summary<-brfss_black %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_black_summary, caption = "Female Black Health")
brfss_asian<-brfss_cleaned_q3 %>% filter(X_imprace=="Asian, Non-Hispanic")
table_asian<- table(brfss_asian$sex,  brfss_asian$genhlth)
mosaicplot(table_asian, main="General Health for Male and Female Asians", color = TRUE, margin=TRUE)
male_asian_summary<-brfss_asian %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_asian_summary, caption = "Male Asian Health")
female_asian_summary<-brfss_asian %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_asian_summary, caption = "Female Asian Health")
brfss_amerind<-brfss_cleaned_q3 %>% filter(X_imprace=="American Indian/Alaskan Native, Non-Hispanic")
table_amerind<- table(brfss_amerind$sex,  brfss_amerind$genhlth)
mosaicplot(table_amerind, main="General Health for Male and Female Amerindian/Alaskan", color = TRUE, margin=TRUE)
male_amerind_summary<-brfss_amerind %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_amerind_summary, caption = "Male Amerindian/Alaskan Health")
female_amerind_summary<-brfss_amerind %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_amerind_summary, caption = "Female Amerindian/Alaskan Health")
brfss_hisp<-brfss_cleaned_q3 %>% filter(X_imprace=="Hispanic")
table_hisp<- table(brfss_hisp$sex,  brfss_hisp$genhlth)
mosaicplot(table_hisp, main="General Health for Male and Female Hispanic", color = TRUE, margin=TRUE)
male_hisp_summary<-brfss_hisp %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_hisp_summary, caption = "Male Hispanic Health")
female_hisp_summary<-brfss_hisp %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_hisp_summary, caption = "Female Hispanic Health")
brfss_other<-brfss_cleaned_q3 %>% filter(X_imprace=="Other race, Non-Hispanic")
table_other<- table(brfss_other$sex,  brfss_other$genhlth)
mosaicplot(table_other, main="General Health for Male and Female Other", color = TRUE, margin=TRUE)
male_other_summary<-brfss_other %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_other_summary, caption = "Male Other Health")
female_other_summary<-brfss_other %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_other_summary, caption = "Female Other Health")
table(brfss_cleaned_q3$sex, brfss_cleaned_q3$race, brfss_cleaned_q3$X_rfhlth)
table(brfss_cleaned_q3$sex, brfss_cleaned_q3$race, brfss_cleaned_q3$X_rfhlth)
?table
brfss_cleaned_q3%>%
table(sex,race)
table(brfss_cleaned_q3$sex, brfss_cleaned_q3$X_imprace, brfss_cleaned_q3$X_rfhlth)
kable(table(brfss_cleaned_q3$sex, brfss_cleaned_q3$X_imprace, brfss_cleaned_q3$X_rfhlth), caption="Entire Contingency Table")
ftable(sex~X_imprace, data = brfss_cleaned_q3 )
ftable(X_rfhlth~sex+X_imprace, data = brfss_cleaned_q3 )
prop.table(brfss_cleaned_q3$sex, brfss_cleaned_q3$X_imprace, brfss_cleaned_q3$X_rfhlth)
prop.table(brfss_cleaned_q3$sex, brfss_cleaned_q3$X_imprace)
ftable(X_rfhlth~sex+X_imprace, data = brfss_cleaned_q3 )
ftable(X_rfhlth~sex+X_imprace, data = brfss_cleaned_q3 ) %>%
mutate(prop_good_health)
ftable(X_rfhlth~sex+X_imprace, data = brfss_cleaned_q3 )
x<-ftable(X_rfhlth~sex+X_imprace, data = brfss_cleaned_q3 )
x
x[0,1]
x[1,1]
x[1,2]
x[,1]
x[,1]+x[,2]
x[,1]/(x[,1]+x[,2])
x %>% mutate(prop_gh = x[,1]/(x[,1]+x[,2]))
prop_gh = x[,1]/(x[,1]+x[,2])
cbind(x,prop_gh)
x<-ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3 )
x
levels(brfss_cleaned_q3$X_rfhlth)
kable(ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3 ), caption = "Somethin'")
ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3 )
?ftable
ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3, dnn=c("m","g") )
?ftable
ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3, dnn=c("m","g","d","d","dd","d") )
ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3, dnn=c("m","g","d","d","dd","d") )
ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 )
x
prop.table(x)
ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 )
x<-ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 )
prop.table(x)
x
cbind(x,x[,1]/(x[,1]+x[,2]))
x
prop_gh<-x[,1]/(x[,1]+x[,2])
prop_gh
brfss_black<-brfss_cleaned_q3 %>% filter(X_imprace=="Black, Non-Hispanic")
table_black<- table(brfss_black$sex,  brfss_black$genhlth)
mosaicplot(table_black, main="General Health for Male and Female Blacks", color = TRUE, margin=TRUE)
male_black_summary<-brfss_black %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_black_summary, caption = "Male Black Health")
female_black_summary<-brfss_black %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_black_summary, caption = "Female Black Health")
brfss_asian<-brfss_cleaned_q3 %>% filter(X_imprace=="Asian, Non-Hispanic")
table_asian<- table(brfss_asian$sex,  brfss_asian$genhlth)
mosaicplot(table_asian, main="General Health for Male and Female Asians", color = TRUE, margin=TRUE)
male_asian_summary<-brfss_asian %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_asian_summary, caption = "Male Asian Health")
female_asian_summary<-brfss_asian %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_asian_summary, caption = "Female Asian Health")
brfss_amerind<-brfss_cleaned_q3 %>% filter(X_imprace=="American Indian/Alaskan Native, Non-Hispanic")
table_amerind<- table(brfss_amerind$sex,  brfss_amerind$genhlth)
mosaicplot(table_amerind, main="General Health for Male and Female Amerindian/Alaskan", color = TRUE, margin=TRUE)
male_amerind_summary<-brfss_amerind %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_amerind_summary, caption = "Male Amerindian/Alaskan Health")
female_amerind_summary<-brfss_amerind %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_amerind_summary, caption = "Female Amerindian/Alaskan Health")
brfss_hisp<-brfss_cleaned_q3 %>% filter(X_imprace=="Hispanic")
table_hisp<- table(brfss_hisp$sex,  brfss_hisp$genhlth)
mosaicplot(table_hisp, main="General Health for Male and Female Hispanic", color = TRUE, margin=TRUE)
male_hisp_summary<-brfss_hisp %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_hisp_summary, caption = "Male Hispanic Health")
female_hisp_summary<-brfss_hisp %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_hisp_summary, caption = "Female Hispanic Health")
brfss_other<-brfss_cleaned_q3 %>% filter(X_imprace=="Other race, Non-Hispanic")
table_other<- table(brfss_other$sex,  brfss_other$genhlth)
mosaicplot(table_other, main="General Health for Male and Female Other", color = TRUE, margin=TRUE)
male_other_summary<-brfss_other %>% filter(sex=="Male") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(male_other_summary, caption = "Male Other Health")
female_other_summary<-brfss_other %>% filter(sex=="Female") %>%
group_by(genhlth) %>%
summarise(total=n()) %>%
mutate(proportion = total/sum(total))
kable(female_other_summary, caption = "Female Other Health")
ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3 )
ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
ftable(sex+X_rfhlth~X_imprace, data = brfss_cleaned_q3 )ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
library(janitor)
install.packages("janitor")
library(janitor)
ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 )
ns_to_percents(ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 ))
x <- data.frame(id = letters[1:3], val0 = 1:3, val1 = 4:6, val2 = 7:9)
x
y<-ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 )
x
x[1]
cbind(x[1],prop.table(as.matrix(x[-1]), margin = 1))
x[-1]
x
y
y[1[]
y[1]
y[1]
y[,1]
?prop.table
y
prop.table(y)
prop.table(y, margin = 1)
x<-ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
prop.table(x,margin=1)
x<-ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
prop.table(x,margin=1)
x<-ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 , dnn=c("Race","Sex","Health"))
kable(prop.table(x,margin=1))
x<-ftable(X_rfhlth~X_imprace+sex, data = brfss_cleaned_q3 )
prop.table(x,margin=1)
?rmarkdown
?pnorm
std_chips<- 17/(sqrt(35))
std_chips
pnorm(134,130,std_chips,lower.tail = FALSE)
300^2 / 25^2
300^2 / 25^2
144*1.96^2
std_child= 4.31/6
pnorm(30.69,32,std_child)
clear
rm(list=ls())
set.seed(9102015)                 # make sure to change the seed
set.seed(28031987)                 # make sure to change the seed
library(statsr)
library(dplyr)
library(ggplot2)
data(ames)
n <- 60
samp <- sample_n(ames, n)
View(ames)
# type your code for the Exercise here, and Knit
ggplot(samp, aes(x=area)) + geom_histogram()
# type your code for the Exercise here, and Knit
ggplot(samp, aes(x=area)) + geom_histogram(binwidth = 100)
# type your code for the Exercise here, and Knit
ggplot(samp, aes(x=area)) + geom_histogram(binwidth = 50)
# type your code for the Exercise here, and Knit
ggplot(samp, aes(x=area)) + geom_histogram(binwidth = 100)
# type your code for the Exercise here, and Knit
ggplot(samp, aes(x=area)) + geom_histogram(binwidth = 100)
samp %>% summarise(mean_size=mean(area), std_size = std(area))
# type your code for the Exercise here, and Knit
ggplot(samp, aes(x=area)) + geom_histogram(binwidth = 100)
samp %>% summarise(mean_size=mean(area), std_size = sd(area))
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(area))
# type your code for the Exercise here, and Knit
params
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
View(ci)
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Question 5 here, and Knit
qnorm(0.995, mean=0, sd=1)
# type your code for the Exercise here, and Knit
ci
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2)
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2)
ci99
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2)
ci99
ci
# type your code for the Question 5 here, and Knit
z99<-qnorm(0.995, mean=0, sd=1)
z99
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2+ z99/z_star_95*(upper-lower)/2)
ci99
ci
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2)
ci99
ci
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2)
ci99
ci
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99
ci
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99_data<- data.frame(ci_id=c(1:50,1:50),
ci_bounds=c(ci99$lower, ci99$upper),
capture_mu=c(ci99$capture_mu, ci99$capture_mu) )
ggplot(data=ci99_data, aes(x=ci_bounds, y=ci_id)) + geom_dotplot() + geom_line()
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99_data<- data.frame(ci_id=c(1:50,1:50),
ci_bounds=c(ci99$lower, ci99$upper),
capture_mu=c(ci99$capture_mu, ci99$capture_mu) )
ggplot(data=ci99_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) + geom_dotplot() + geom_line()
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99_data<- data.frame(ci_id=c(1:50,1:50),
ci_bounds=c(ci99$lower, ci99$upper),
capture_mu=c(ci99$capture_mu, ci99$capture_mu) )
ggplot(data=ci99_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) + geom_point(size=2) + geom_line()
?geom_vline
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99_data<- data.frame(ci_id=c(1:50,1:50),
ci_bounds=c(ci99$lower, ci99$upper),
capture_mu=c(ci99$capture_mu, ci99$capture_mu) )
ggplot(data=ci99_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) + geom_point(size=2) + geom_line() + geom_vline(params$mu)
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99_data<- data.frame(ci_id=c(1:50,1:50),
ci_bounds=c(ci99$lower, ci99$upper),
capture_mu=c(ci99$capture_mu, ci99$capture_mu) )
ggplot(data=ci99_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) + geom_point(size=2) + geom_line() + geom_vline(xintercept=params$mu)
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99_data<- data.frame(ci_id=c(1:50,1:50),
ci_bounds=c(ci99$lower, ci99$upper),
capture_mu=c(ci99$capture_mu, ci99$capture_mu) )
ggplot(data=ci99_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) + geom_point(size=2) + geom_line() + geom_vline(xintercept=params$mu, color=green)
# type your code for the Exercise here, and Knit
ci99 <- ci %>%
mutate(lower= (lower+upper)/2- z99/z_star_95*(upper-lower)/2,
upper=(lower+upper)/2+ z99/z_star_95*(upper-lower)/2) %>%
mutate( capture_mu=ifelse(params$mu>lower & params$mu<upper, "Yes","No") )
ci99_data<- data.frame(ci_id=c(1:50,1:50),
ci_bounds=c(ci99$lower, ci99$upper),
capture_mu=c(ci99$capture_mu, ci99$capture_mu) )
ggplot(data=ci99_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) + geom_point(size=2) + geom_line() + geom_vline(xintercept=params$mu, color="green")
pnorm(2)
pnorm(2, lower.tail = FALSE)
pnorm(2, lower.tail = FALSE)*2
pt(2,df=50, lower.tail = FALSE)|*2
pt(2,df=50, lower.tail = FALSE)*2
pt(2,df=10, lower.tail = FALSE)*2
2*pt(2.3,21,lower.tail = FALSER)
2*pt(2.3,21,lower.tail = FALSE)
qt(.975,21,lower.tail=FALSE)
qt(.975,21,lower.tail=TRUE)
pt(2.24, lower.tail = FALSE)
pt(2.24, 21,lower.tail = FALSE)
pt(2.24, 21,lower.tail = FALSE)*2
pt(-0.87, 199)
pt(-0.87, 199)*2
pnorm(-0.2,0,1)
pnorm(-3.332,-3,1.7)
qnorm(0.8)
qnorm(0.8,-3,1.7)
qnorm(0.8,-3,1)
qnorm(0.8)
236.56/3106.36
pf(21.735,3,791)
pf(21.735,3,791,lower.tail = FALSE)
